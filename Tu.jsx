/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/tu.glb 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';


export function Tu(props) {
  const { nodes, materials } = useGLTF('/tu.glb')
 const basilRef = useRef();

  // Animate continuous rotation like a spinning top (Beyblade)
  useFrame(() => {
    if (basilRef.current) {
      basilRef.current.rotation.z-= 0.005; // Adjust speed by changing 0.05
    }
});
  return (
    <group ref={basilRef}{...props} dispose={null}>
        <group scale={1.5}>
        <group position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[1, 1, 1]}>
        <mesh 
  geometry={nodes.mesh_0.geometry} 
  material={nodes.mesh_0.material} 
  castShadow 
  receiveShadow
/>

      </group>
      </group>
    </group>
  )
}

useGLTF.preload('/tu.glb')
export default Tu;